$Id: DBLIB.txt,v 1.6.2.1 2000-07-30 22:03:44 dairiki Exp $


This is a description of the Jeff's hacked database interface for PhpWiki.
Regardless of what kind of data store is used (RDBMS, DBM files, flat
text files) you should be able to write a library that supports that
data store.

Currently only the DBM and MySQL database backends are implemented.


WikiPage objects:
=================

A version of a wiki page is represented by a WikiPage object.  (This is
either a class of type WikiPage, or one of its subclasses.)

WikiPage objects have read-only semantics.  (To save a new version of a
page, create a new WikiPage with the new contents of the page and
then use $dbi->insertPage($page) to store the new page contents into
the database.)

The public interface to WikiPages is as follows:

$page->name()      Returns page name.
$page->author()    Returns page author.
$page->version()
  Returns the version of this page.   Page versions are always greater than
  zero, and are incremented every time a new version of the page is saved.

  Certain types of WikiPages may return zero as the value of $page->version().
  This signals that the WikiPage object refers to the most recent version
  of the page.

$page->latestversion()
  Returns the version number of the most recently saved version of this page.

$page->created()
  Returns the time the first version of this page was
  created.  The value is returned as a unix timestamp
  (seconds since midnight Jan 1, 1970 GMT.)
$page->lastmodified()
  Returns the time this version of this page was stored.
  (As unix timestamp.)

$page->flags()
  Return the page flags (an integer).  Currently FLAG_PAGE_LOCKED
  is the only defined flag.
$page->isLocked()
  Returns true if the page is locked.


$page->content()
  Returns the content of the page as an array.  Each element of the
  array is a string with the contents of one line.  The lines should
  not contain trailing white space characters, and the array should not
  contain trailing blank lines.
$page->packedContent()
  Returns the page content as a single string.  The lines of the page
  are separated by newlines.
$page->asHTML()
  Returns the page content, with the Wiki markup parsed and converted
  to HTML.


$page->refs()
  Returns the page references as an array.  The indices of this array
  are in the range [1 .. NUM_LINKS].
$page->hits()
  Returns the page hit count.  This is a global value; it does not apply to
  a specific page version.

$page->links()
  Returns an array containing the names of all pages link to from this
  page.  This is a self keyed array ($links[$val] = $val).




WikiPageIterator objects:
=========================

Many of the methods of the WikiDataBase object return WikiPageIterator
objects.   These objects represent a sequence of WikiPages.
These have just one public method:

$iterator->next()
   Return the next WikiPage in the sequence, or false, if there are no
   more pages in the sequence.



The WikiDataBase object:
=======================
The database is open by a call to the function:

OpenDatabase(hash $dbparams)
  Returns a WikiDataBase object.

  The hash $dbparams contains the database parameters:

  $dbparams['dbtype']
    Specifies the type of database.  Current choices are 'dbm' or 'mysql'.

  For the DBM backend:

  $dbparams['dbfile']
    Specifies the basename for the DBM files.  Currently the DBM backend uses
    two DBM files whose names are formed by appending ".page" and ".vers"
    to the name specified in $dbparams['dbfile'].
 
  For the MySQL backend:

  $dbparams['server']   (default 'localhost')
  $dbparams['user']     (default 'guest')
  $dbparams['password'] (default '')
  $dbparams['database'] (default 'test')
    Specify the server host name, user name, password and MySQL database
  to connect to.


Public methods of WikiDataBase:

 
$dbi->retrievePage (string $pagename, int $version = 0)
  Retrieve a version of a page from the database.  (If $version is zero,
  then the most recent version of the specified page is retrieved.)
  Returns a WikiPage object, or false if the specified version of the page
  is not in the database.

$dbi->getPage (string $pagename, int $version = 0)
  Attempts to retrieve a page from the database.  If $version is zero,
  and the page does not exist in the database, then it returns a
  WikiPage initialized with default values appropriate to a non-existing
  page.   If $version != 0, and the specified version does not exist
  in the database, then returns false.

$dbi->insertPage (WikiPage $page, boolean $no_backup = false)
  Store a new (or initial) version of a page into the database.
  If $no_backup is true, the previous version is deleted from the database.

$dbi->setFlags (string $pagename, int $flags)
  Set the flags for a page to the specified value.

$dbi->increaseHitCount (string $pagename)
  Increase the hit count for the specified page.

$dbi->nPages()
  Returns the number of pages in the database.

$dbi->isWikiPage (string $pagename)
  Returns true if there is a page with the given name in the database.

$dbi->previousVersion (string $pagename, int $version = 0)
  Get previous version number of page.  Returns the version number of the
  most recent version of the page in the database previous to the version
  specified by $version.  If $version = 0, then return the version number
  of the second most recent version of the page in the database.   Returns
  zero if there is no previous version in the database.
 
$dbi->retrieveAllVersions(string $pagename)
  Returns a WikiPageIterator which can be used to access all the versions
  of the specified page which are stored in the database.  The pages
  are returned in order of descending version number (most recent version
  first).

$dbi->titleSearch(string $search)
  Returns a WikiPageIterator which can be used to access (the most recent
  versions) of all pages which contain the $search string in their title.
  The pages should be returned in alphabetical order by pagename whenever
  this is practical.

$dbi->fullSearch(string $search)
  Returns a WikiPageIterator which can be used to access (the most recent
  versions) of all pages which contain the $search string in either 
  their title or their page content.  The pages should be returned
  in alphabetical order by pagename whenever this is practical.

$dbi->backLinks(string $pagename)
  Returns a WikiPageIterator which can be used to access (the most recent
  versions) of all pages which link to $pagename.  The pages should be
  returned in alphabetical order by pagename whenever this is practical.

$dbi->mostPopular(int $limit = 20)
  Returns a WikiPageIterator which can be used to access (the most recent
  versions) of the pages with the highest hit counts.  At most $limit pages
  are returned, in order of decreasing hit count.

$dbi->retrieveAllPages ()
  Returns a WikiPageIterator which can be used to access (the most recent
  versions) of all the pages in the database.  The pages should be
  returned in alphabetical order by pagename whenever this is practical.

$dbi->isInTmp()
  Returns true if the database is stored in the /tmp directory.

  array) of all the data, where 'content' == the text of the page in Wiki
  markup, 'version' is an integer representing the version, 'author'
  the IP address or host name of the previous author and so on. See
  the next paragraph for a precise description.

$dbi->close()
  Close the database.  The WikiDataBase may no longer be used after
  this is called.
